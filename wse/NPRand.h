#ifndef _NPRAND_H
#define _NPRAND_H

#include <stdio.h>
#include <stdlib.h>

class NPRand
{

public:
    int vect[1000] =  {308, 346, 164, 997, 157, 759, 240, 178, 263, 765, 98, 191, 22, 745, 974, 76, 55, 256, 377, 372, 346, 339, 349, 381, 708, 790, 169, 12, 440, 998, 536, 43, 757, 238, 985, 471, 371, 629, 786, 92, 298, 449, 61, 247, 730, 976, 635, 5, 874, 844, 322, 845, 153, 540, 500, 558, 300, 704, 669, 739, 795, 237, 156, 813, 369, 93, 871, 801, 216, 600, 245, 218, 618, 647, 339, 989, 3, 637, 538, 692, 733, 986, 70, 649, 255, 96, 263, 919, 590, 689, 245, 512, 530, 416, 702, 163, 828, 736, 901, 387, 885, 799, 987, 270, 614, 886, 609, 325, 101, 909, 324, 997, 746, 626, 75, 754, 303, 761, 63, 16, 286, 357, 918, 510, 436, 463, 327, 21, 891, 102, 637, 977, 347, 318, 797, 596, 936, 840, 233, 70, 961, 165, 724, 658, 734, 846, 924, 487, 246, 639, 39, 705, 559, 762, 777, 838, 897, 744, 409, 274, 279, 254, 132, 731, 985, 792, 733, 849, 17, 112, 688, 167, 665, 602, 441, 550, 704, 47, 8, 472, 711, 78, 457, 607, 569, 460, 967, 11, 445, 609, 546, 482, 888, 164, 138, 364, 53, 183, 720, 876, 643, 968, 976, 15, 27, 85, 781, 333, 272, 615, 283, 214, 36, 225, 937, 715, 365, 651, 660, 901, 560, 568, 970, 526, 42, 620, 27, 396, 524, 967, 243, 306, 371, 347, 18, 532, 32, 469, 512, 591, 132, 209, 471, 10, 868, 708, 61, 13, 524, 12, 762, 408, 849, 183, 364, 882, 99, 19, 551, 117, 492, 736, 608, 767, 320, 602, 470, 866, 64, 73, 939, 686, 206, 929, 678, 437, 447, 713, 642, 966, 411, 963, 742, 742, 28, 522, 867, 802, 511, 246, 859, 326, 904, 502, 532, 314, 737, 676, 587, 29, 327, 894, 243, 267, 637, 670, 783, 117, 269, 96, 575, 355, 953, 113, 132, 671, 87, 94, 733, 384, 633, 117, 737, 508, 442, 548, 38, 685, 922, 898, 919, 540, 562, 394, 762, 370, 539, 984, 764, 328, 604, 396, 88, 80, 974, 271, 360, 480, 886, 57, 651, 730, 797, 533, 178, 120, 509, 946, 77, 537, 357, 893, 590, 685, 467, 21, 542, 259, 126, 679, 962, 30, 569, 189, 416, 866, 226, 256, 565, 410, 299, 216, 586, 733, 111, 154, 983, 342, 856, 459, 44, 732, 694, 798, 568, 430, 448, 317, 178, 473, 737, 547, 306, 327, 241, 505, 66, 942, 515, 607, 41, 878, 517, 833, 48, 455, 490, 275, 874, 741, 431, 164, 593, 702, 935, 110, 121, 637, 146, 942, 763, 1, 868, 956, 361, 781, 887, 108, 830, 147, 908, 585, 308, 122, 156, 428, 469, 428, 185, 497, 528, 850, 989, 225, 355, 948, 326, 501, 987, 524, 826, 732, 294, 608, 393, 171, 858, 571, 810, 749, 820, 887, 953, 847, 656, 934, 724, 94, 541, 539, 595, 460, 798, 266, 471, 877, 256, 961, 550, 389, 122, 752, 508, 568, 283, 958, 222, 909, 826, 710, 665, 665, 517, 149, 564, 145, 896, 984, 237, 765, 491, 240, 658, 880, 120, 762, 231, 354, 728, 464, 466, 960, 898, 270, 29, 582, 103, 74, 860, 907, 670, 91, 253, 134, 183, 481, 399, 258, 362, 160, 794, 1000, 780, 291, 508, 800, 4, 440, 139, 590, 256, 29, 66, 913, 931, 806, 491, 869, 430, 82, 216, 464, 538, 613, 428, 581, 392, 600, 22, 459, 764, 954, 566, 103, 787, 128, 30, 507, 5, 323, 671, 30, 570, 544, 949, 200, 611, 447, 175, 74, 960, 237, 529, 751, 634, 588, 204, 105, 186, 448, 822, 974, 452, 457, 592, 814, 753, 155, 503, 128, 919, 789, 515, 376, 130, 275, 598, 554, 679, 218, 131, 281, 812, 198, 697, 931, 132, 181, 922, 111, 199, 622, 456, 449, 790, 315, 335, 535, 500, 563, 441, 523, 43, 779, 667, 800, 930, 888, 427, 413, 774, 789, 918, 494, 112, 646, 260, 776, 189, 400, 536, 713, 524, 993, 416, 259, 99, 432, 561, 205, 234, 276, 13, 583, 480, 521, 630, 348, 118, 339, 370, 747, 522, 986, 11, 855, 151, 398, 940, 793, 775, 821, 178, 983, 511, 240, 795, 289, 237, 391, 175, 153, 770, 902, 195, 538, 275, 64, 334, 362, 662, 868, 382, 95, 338, 474, 38, 213, 960, 552, 757, 68, 420, 75, 188, 397, 486, 311, 442, 461, 673, 129, 205, 74, 83, 473, 32, 616, 25, 902, 202, 222, 209, 121, 857, 363, 12, 512, 928, 2, 945, 54, 468, 968, 67, 571, 326, 662, 991, 323, 655, 335, 415, 331, 709, 597, 388, 194, 864, 534, 927, 373, 497, 242, 724, 978, 324, 140, 13, 184, 924, 99, 56, 618, 800, 705, 442, 588, 922, 505, 348, 864, 292, 220, 163, 694, 693, 328, 41, 386, 941, 815, 494, 422, 851, 477, 221, 0, 877, 521, 87, 373, 480, 645, 894, 601, 996, 961, 427, 702, 365, 955, 631, 617, 326, 131, 696, 135, 957, 606, 799, 566, 245, 174, 4, 993, 366, 396, 67, 886, 776, 331, 924, 532, 508, 667, 29, 135, 467, 419, 594, 529, 618, 422, 687, 669, 640, 843, 982, 967, 496, 947, 771, 161, 568, 207, 668, 409, 346, 234, 776, 633, 187, 953, 622, 133, 708, 641, 842, 805, 808, 749, 238, 119, 99, 719, 433, 246, 818, 308, 754, 732, 673, 380, 504, 356, 897, 897, 364, 756, 719, 524, 266, 768, 268, 274, 645, 650, 415, 215, 966, 287, 181, 455, 65, 434, 793, 164, 597, 309, 415, 488, 302, 721, 35, 405, 628, 771, 36, 822, 658, 46, 247, 308, 973, 61, 501, 210, 216, 566, 643, 907, 585, 129, 921, 369, 673, 311, 587, 123, 942, 354, 424, 731, 915, 462, 192, 74, 503, 400, 994, 211, 811, 863, 390, 201, 894, 60, 666, 402, 951, 67, 243, 84, 747, 653, 672, 965, 453, 218, 603, 633, 350, 916, 453, 233, 606, 538, 893, 293, 56, 499, 643, 981, 74, 819, 168, 108, 844, 476};
    int seed = 0;

    //~ void set_seed(int s) ;

    //~ int get_rand(int H);

    void set_seed(int s)
    {
        seed = s;
    }

    int get_rand(int H)
    {
        int aux = vect[seed++ % 1000] % H;
        assert(aux >= 0);
        return aux;

    }


};

//~ void NPRand::set_seed(int s) {
//~ seed = s;
//~ }

//~ int NPRand::get_rand(int H) {
//~ return vect[seed++]%H;
//~ }



#endif
